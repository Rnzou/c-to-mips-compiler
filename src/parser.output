Nonterminals useless in grammar

    global_declaration


Terminals unused in grammar

    T_INCREMENT
    T_MODULO
    T_SQUARE_LBRACKET
    T_SQUARE_RBRACKET
    T_COLON
    T_SWITCH
    T_CONTINUE
    T_BREAK


Rules useless in grammar

   69 global_declaration: function_definition
   70                   | declaration


State 112 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: translation_unit

    2 translation_unit: function_definition
    3                 | translation_unit function_definition

    4 function_definition: type_specifier T_IDENTIFIER T_LBRACKET parameter_list T_RBRACKET compound_statement

    5 declarator: T_IDENTIFIER

    6 declaration: type_specifier T_SEMICOLON
    7            | type_specifier initialisation_declarator_list T_SEMICOLON

    8 declaration_list: declaration
    9                 | declaration_list declaration

   10 parameter_declaration: type_specifier declarator

   11 parameter_list: parameter_declaration
   12               | parameter_list T_COMMA parameter_declaration
   13               | %empty

   14 initialisation_declarator: declarator
   15                          | declarator T_EQUAL expression

   16 initialisation_declarator_list: initialisation_declarator
   17                               | initialisation_declarator_list T_COMMA initialisation_declarator

   18 primary_expression: T_CONSTANT
   19                   | T_IDENTIFIER
   20                   | T_LITERAL
   21                   | T_LBRACKET expression T_RBRACKET

   22 postfix_expression: primary_expression
   23                   | primary_expression INC_OP
   24                   | primary_expression T_LBRACKET T_RBRACKET
   25                   | primary_expression T_LBRACKET argument_list T_RBRACKET

   26 multiply_expression: postfix_expression
   27                    | multiply_expression T_MULTIPLY postfix_expression
   28                    | multiply_expression T_DIVIDE postfix_expression

   29 add_expression: multiply_expression
   30               | add_expression T_PLUS multiply_expression
   31               | add_expression T_MINUS multiply_expression

   32 bw_shift_expression: add_expression

   33 compare_expression: bw_shift_expression
   34                   | compare_expression T_LESS bw_shift_expression
   35                   | compare_expression T_LESS_EQUAL bw_shift_expression
   36                   | compare_expression T_GREATER bw_shift_expression
   37                   | compare_expression T_GREATER_EQUAL bw_shift_expression

   38 equal_expression: compare_expression
   39                 | equal_expression T_EQUAL compare_expression
   40                 | equal_expression T_NOT_EQUAL compare_expression

   41 bitwise_expression: equal_expression

   42 logical_expression: bitwise_expression

   43 ternary_expression: logical_expression

   44 assignment_expression: ternary_expression
   45                      | postfix_expression T_ASSIGN assignment_expression

   46 expression: assignment_expression

   47 argument_list: expression
   48              | argument_list T_COMMA expression

   49 statement: jump_statement
   50          | compound_statement
   51          | expression_statement
   52          | condition_statement
   53          | iteration_statement

   54 statement_list: statement
   55               | statement_list statement

   56 compound_statement: T_CURLY_LBRACKET T_CURLY_RBRACKET
   57                   | T_CURLY_LBRACKET statement_list T_CURLY_RBRACKET
   58                   | T_CURLY_LBRACKET declaration_list T_CURLY_RBRACKET
   59                   | T_CURLY_LBRACKET declaration_list statement_list T_CURLY_RBRACKET

   60 jump_statement: T_RETURN T_SEMICOLON
   61               | T_RETURN expression T_SEMICOLON

   62 expression_statement: expression T_SEMICOLON

   63 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement
   64                    | T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement

   65 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement
   66                    | T_FOR T_LBRACKET expression T_SEMICOLON expression T_SEMICOLON expression T_RBRACKET statement

   67 type_specifier: T_INT
   68               | T_VOID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_ASSIGN (258) 45
    T_INCREMENT (259)
    T_MULTIPLY (260) 27
    T_DIVIDE (261) 28
    T_PLUS (262) 30
    T_MINUS (263) 31
    T_MODULO (264)
    T_LBRACKET (265) 4 21 24 25 63 64 65 66
    T_RBRACKET (266) 4 21 24 25 63 64 65 66
    T_SQUARE_LBRACKET (267)
    T_SQUARE_RBRACKET (268)
    T_CURLY_LBRACKET (269) 56 57 58 59
    T_CURLY_RBRACKET (270) 56 57 58 59
    T_COLON (271)
    T_SEMICOLON (272) 6 7 60 61 62 66
    T_COMMA (273) 12 17 48
    T_GREATER (274) 36
    T_GREATER_EQUAL (275) 37
    T_LESS (276) 34
    T_LESS_EQUAL (277) 35
    T_EQUAL (278) 15 39
    T_NOT_EQUAL (279) 40
    T_INT <string> (280) 67
    T_VOID (281) 68
    T_IF (282) 63 64
    T_ELSE (283) 64
    T_SWITCH (284)
    T_WHILE (285) 65
    T_FOR (286) 66
    T_CONTINUE (287)
    T_BREAK (288)
    T_RETURN <string> (289) 60 61
    T_IDENTIFIER <string> (290) 4 5 19
    T_CONSTANT <int_num> (291) 18
    INC_OP (292) 23
    T_LITERAL <string> (293) 20


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    ROOT (40)
        on left: 1
        on right: 0
    translation_unit <node> (41)
        on left: 2 3
        on right: 1 3
    function_definition <node> (42)
        on left: 4
        on right: 2 3
    declarator <declarator_node> (43)
        on left: 5
        on right: 10 14 15
    declaration <declaration_node> (44)
        on left: 6 7
        on right: 8 9
    declaration_list <declaration_list_vector> (45)
        on left: 8 9
        on right: 9 58 59
    parameter_declaration <declaration_node> (46)
        on left: 10
        on right: 11 12
    parameter_list <declaration_list_vector> (47)
        on left: 11 12 13
        on right: 4 12
    initialisation_declarator <declarator_node> (48)
        on left: 14 15
        on right: 16 17
    initialisation_declarator_list <declarator_list_vector> (49)
        on left: 16 17
        on right: 7 17
    primary_expression <expression_node> (50)
        on left: 18 19 20 21
        on right: 22 23 24 25
    postfix_expression <expression_node> (51)
        on left: 22 23 24 25
        on right: 26 27 28 45
    multiply_expression <expression_node> (52)
        on left: 26 27 28
        on right: 27 28 29 30 31
    add_expression <expression_node> (53)
        on left: 29 30 31
        on right: 30 31 32
    bw_shift_expression <expression_node> (54)
        on left: 32
        on right: 33 34 35 36 37
    compare_expression <expression_node> (55)
        on left: 33 34 35 36 37
        on right: 34 35 36 37 38 39 40
    equal_expression <expression_node> (56)
        on left: 38 39 40
        on right: 39 40 41
    bitwise_expression <expression_node> (57)
        on left: 41
        on right: 42
    logical_expression <expression_node> (58)
        on left: 42
        on right: 43
    ternary_expression <expression_node> (59)
        on left: 43
        on right: 44
    assignment_expression <expression_node> (60)
        on left: 44 45
        on right: 45 46
    expression <expression_node> (61)
        on left: 46
        on right: 15 21 47 48 61 62 63 64 65 66
    argument_list <argument_list_vector> (62)
        on left: 47 48
        on right: 25 48
    statement <statement_node> (63)
        on left: 49 50 51 52 53
        on right: 54 55 63 64 65 66
    statement_list <statement_list_vector> (64)
        on left: 54 55
        on right: 55 57 59
    compound_statement <statement_node> (65)
        on left: 56 57 58 59
        on right: 4 50
    jump_statement <statement_node> (66)
        on left: 60 61
        on right: 49
    expression_statement <statement_node> (67)
        on left: 62
        on right: 51
    condition_statement <statement_node> (68)
        on left: 63 64
        on right: 52
    iteration_statement <statement_node> (69)
        on left: 65 66
        on right: 53
    type_specifier <string> (70)
        on left: 67 68
        on right: 4 6 7 10


State 0

    0 $accept: . ROOT $end

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    ROOT                 go to state 3
    translation_unit     go to state 4
    function_definition  go to state 5
    type_specifier       go to state 6


State 1

   67 type_specifier: T_INT .

    $default  reduce using rule 67 (type_specifier)


State 2

   68 type_specifier: T_VOID .

    $default  reduce using rule 68 (type_specifier)


State 3

    0 $accept: ROOT . $end

    $end  shift, and go to state 7


State 4

    1 ROOT: translation_unit .
    3 translation_unit: translation_unit . function_definition

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    $default  reduce using rule 1 (ROOT)

    function_definition  go to state 8
    type_specifier       go to state 6


State 5

    2 translation_unit: function_definition .

    $default  reduce using rule 2 (translation_unit)


State 6

    4 function_definition: type_specifier . T_IDENTIFIER T_LBRACKET parameter_list T_RBRACKET compound_statement

    T_IDENTIFIER  shift, and go to state 9


State 7

    0 $accept: ROOT $end .

    $default  accept


State 8

    3 translation_unit: translation_unit function_definition .

    $default  reduce using rule 3 (translation_unit)


State 9

    4 function_definition: type_specifier T_IDENTIFIER . T_LBRACKET parameter_list T_RBRACKET compound_statement

    T_LBRACKET  shift, and go to state 10


State 10

    4 function_definition: type_specifier T_IDENTIFIER T_LBRACKET . parameter_list T_RBRACKET compound_statement

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    $default  reduce using rule 13 (parameter_list)

    parameter_declaration  go to state 11
    parameter_list         go to state 12
    type_specifier         go to state 13


State 11

   11 parameter_list: parameter_declaration .

    $default  reduce using rule 11 (parameter_list)


State 12

    4 function_definition: type_specifier T_IDENTIFIER T_LBRACKET parameter_list . T_RBRACKET compound_statement
   12 parameter_list: parameter_list . T_COMMA parameter_declaration

    T_RBRACKET  shift, and go to state 14
    T_COMMA     shift, and go to state 15


State 13

   10 parameter_declaration: type_specifier . declarator

    T_IDENTIFIER  shift, and go to state 16

    declarator  go to state 17


State 14

    4 function_definition: type_specifier T_IDENTIFIER T_LBRACKET parameter_list T_RBRACKET . compound_statement

    T_CURLY_LBRACKET  shift, and go to state 18

    compound_statement  go to state 19


State 15

   12 parameter_list: parameter_list T_COMMA . parameter_declaration

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    parameter_declaration  go to state 20
    type_specifier         go to state 13


State 16

    5 declarator: T_IDENTIFIER .

    $default  reduce using rule 5 (declarator)


State 17

   10 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 10 (parameter_declaration)


State 18

   56 compound_statement: T_CURLY_LBRACKET . T_CURLY_RBRACKET
   57                   | T_CURLY_LBRACKET . statement_list T_CURLY_RBRACKET
   58                   | T_CURLY_LBRACKET . declaration_list T_CURLY_RBRACKET
   59                   | T_CURLY_LBRACKET . declaration_list statement_list T_CURLY_RBRACKET

    T_LBRACKET        shift, and go to state 21
    T_CURLY_LBRACKET  shift, and go to state 18
    T_CURLY_RBRACKET  shift, and go to state 22
    T_INT             shift, and go to state 1
    T_VOID            shift, and go to state 2
    T_IF              shift, and go to state 23
    T_WHILE           shift, and go to state 24
    T_FOR             shift, and go to state 25
    T_RETURN          shift, and go to state 26
    T_IDENTIFIER      shift, and go to state 27
    T_CONSTANT        shift, and go to state 28
    T_LITERAL         shift, and go to state 29

    declaration            go to state 30
    declaration_list       go to state 31
    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 43
    statement              go to state 44
    statement_list         go to state 45
    compound_statement     go to state 46
    jump_statement         go to state 47
    expression_statement   go to state 48
    condition_statement    go to state 49
    iteration_statement    go to state 50
    type_specifier         go to state 51


State 19

    4 function_definition: type_specifier T_IDENTIFIER T_LBRACKET parameter_list T_RBRACKET compound_statement .

    $default  reduce using rule 4 (function_definition)


State 20

   12 parameter_list: parameter_list T_COMMA parameter_declaration .

    $default  reduce using rule 12 (parameter_list)


State 21

   21 primary_expression: T_LBRACKET . expression T_RBRACKET

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 52


State 22

   56 compound_statement: T_CURLY_LBRACKET T_CURLY_RBRACKET .

    $default  reduce using rule 56 (compound_statement)


State 23

   63 condition_statement: T_IF . T_LBRACKET expression T_RBRACKET statement
   64                    | T_IF . T_LBRACKET expression T_RBRACKET statement T_ELSE statement

    T_LBRACKET  shift, and go to state 53


State 24

   65 iteration_statement: T_WHILE . T_LBRACKET expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 54


State 25

   66 iteration_statement: T_FOR . T_LBRACKET expression T_SEMICOLON expression T_SEMICOLON expression T_RBRACKET statement

    T_LBRACKET  shift, and go to state 55


State 26

   60 jump_statement: T_RETURN . T_SEMICOLON
   61               | T_RETURN . expression T_SEMICOLON

    T_LBRACKET    shift, and go to state 21
    T_SEMICOLON   shift, and go to state 56
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 57


State 27

   19 primary_expression: T_IDENTIFIER .

    $default  reduce using rule 19 (primary_expression)


State 28

   18 primary_expression: T_CONSTANT .

    $default  reduce using rule 18 (primary_expression)


State 29

   20 primary_expression: T_LITERAL .

    $default  reduce using rule 20 (primary_expression)


State 30

    8 declaration_list: declaration .

    $default  reduce using rule 8 (declaration_list)


State 31

    9 declaration_list: declaration_list . declaration
   58 compound_statement: T_CURLY_LBRACKET declaration_list . T_CURLY_RBRACKET
   59                   | T_CURLY_LBRACKET declaration_list . statement_list T_CURLY_RBRACKET

    T_LBRACKET        shift, and go to state 21
    T_CURLY_LBRACKET  shift, and go to state 18
    T_CURLY_RBRACKET  shift, and go to state 58
    T_INT             shift, and go to state 1
    T_VOID            shift, and go to state 2
    T_IF              shift, and go to state 23
    T_WHILE           shift, and go to state 24
    T_FOR             shift, and go to state 25
    T_RETURN          shift, and go to state 26
    T_IDENTIFIER      shift, and go to state 27
    T_CONSTANT        shift, and go to state 28
    T_LITERAL         shift, and go to state 29

    declaration            go to state 59
    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 43
    statement              go to state 44
    statement_list         go to state 60
    compound_statement     go to state 46
    jump_statement         go to state 47
    expression_statement   go to state 48
    condition_statement    go to state 49
    iteration_statement    go to state 50
    type_specifier         go to state 51


State 32

   22 postfix_expression: primary_expression .
   23                   | primary_expression . INC_OP
   24                   | primary_expression . T_LBRACKET T_RBRACKET
   25                   | primary_expression . T_LBRACKET argument_list T_RBRACKET

    T_LBRACKET  shift, and go to state 61
    INC_OP      shift, and go to state 62

    $default  reduce using rule 22 (postfix_expression)


State 33

   26 multiply_expression: postfix_expression .
   45 assignment_expression: postfix_expression . T_ASSIGN assignment_expression

    T_ASSIGN  shift, and go to state 63

    $default  reduce using rule 26 (multiply_expression)


State 34

   27 multiply_expression: multiply_expression . T_MULTIPLY postfix_expression
   28                    | multiply_expression . T_DIVIDE postfix_expression
   29 add_expression: multiply_expression .

    T_MULTIPLY  shift, and go to state 64
    T_DIVIDE    shift, and go to state 65

    $default  reduce using rule 29 (add_expression)


State 35

   30 add_expression: add_expression . T_PLUS multiply_expression
   31               | add_expression . T_MINUS multiply_expression
   32 bw_shift_expression: add_expression .

    T_PLUS   shift, and go to state 66
    T_MINUS  shift, and go to state 67

    $default  reduce using rule 32 (bw_shift_expression)


State 36

   33 compare_expression: bw_shift_expression .

    $default  reduce using rule 33 (compare_expression)


State 37

   34 compare_expression: compare_expression . T_LESS bw_shift_expression
   35                   | compare_expression . T_LESS_EQUAL bw_shift_expression
   36                   | compare_expression . T_GREATER bw_shift_expression
   37                   | compare_expression . T_GREATER_EQUAL bw_shift_expression
   38 equal_expression: compare_expression .

    T_GREATER        shift, and go to state 68
    T_GREATER_EQUAL  shift, and go to state 69
    T_LESS           shift, and go to state 70
    T_LESS_EQUAL     shift, and go to state 71

    $default  reduce using rule 38 (equal_expression)


State 38

   39 equal_expression: equal_expression . T_EQUAL compare_expression
   40                 | equal_expression . T_NOT_EQUAL compare_expression
   41 bitwise_expression: equal_expression .

    T_EQUAL      shift, and go to state 72
    T_NOT_EQUAL  shift, and go to state 73

    $default  reduce using rule 41 (bitwise_expression)


State 39

   42 logical_expression: bitwise_expression .

    $default  reduce using rule 42 (logical_expression)


State 40

   43 ternary_expression: logical_expression .

    $default  reduce using rule 43 (ternary_expression)


State 41

   44 assignment_expression: ternary_expression .

    $default  reduce using rule 44 (assignment_expression)


State 42

   46 expression: assignment_expression .

    $default  reduce using rule 46 (expression)


State 43

   62 expression_statement: expression . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 74


State 44

   54 statement_list: statement .

    $default  reduce using rule 54 (statement_list)


State 45

   55 statement_list: statement_list . statement
   57 compound_statement: T_CURLY_LBRACKET statement_list . T_CURLY_RBRACKET

    T_LBRACKET        shift, and go to state 21
    T_CURLY_LBRACKET  shift, and go to state 18
    T_CURLY_RBRACKET  shift, and go to state 75
    T_IF              shift, and go to state 23
    T_WHILE           shift, and go to state 24
    T_FOR             shift, and go to state 25
    T_RETURN          shift, and go to state 26
    T_IDENTIFIER      shift, and go to state 27
    T_CONSTANT        shift, and go to state 28
    T_LITERAL         shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 43
    statement              go to state 76
    compound_statement     go to state 46
    jump_statement         go to state 47
    expression_statement   go to state 48
    condition_statement    go to state 49
    iteration_statement    go to state 50


State 46

   50 statement: compound_statement .

    $default  reduce using rule 50 (statement)


State 47

   49 statement: jump_statement .

    $default  reduce using rule 49 (statement)


State 48

   51 statement: expression_statement .

    $default  reduce using rule 51 (statement)


State 49

   52 statement: condition_statement .

    $default  reduce using rule 52 (statement)


State 50

   53 statement: iteration_statement .

    $default  reduce using rule 53 (statement)


State 51

    6 declaration: type_specifier . T_SEMICOLON
    7            | type_specifier . initialisation_declarator_list T_SEMICOLON

    T_SEMICOLON   shift, and go to state 77
    T_IDENTIFIER  shift, and go to state 16

    declarator                      go to state 78
    initialisation_declarator       go to state 79
    initialisation_declarator_list  go to state 80


State 52

   21 primary_expression: T_LBRACKET expression . T_RBRACKET

    T_RBRACKET  shift, and go to state 81


State 53

   63 condition_statement: T_IF T_LBRACKET . expression T_RBRACKET statement
   64                    | T_IF T_LBRACKET . expression T_RBRACKET statement T_ELSE statement

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 82


State 54

   65 iteration_statement: T_WHILE T_LBRACKET . expression T_RBRACKET statement

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 83


State 55

   66 iteration_statement: T_FOR T_LBRACKET . expression T_SEMICOLON expression T_SEMICOLON expression T_RBRACKET statement

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 84


State 56

   60 jump_statement: T_RETURN T_SEMICOLON .

    $default  reduce using rule 60 (jump_statement)


State 57

   61 jump_statement: T_RETURN expression . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 85


State 58

   58 compound_statement: T_CURLY_LBRACKET declaration_list T_CURLY_RBRACKET .

    $default  reduce using rule 58 (compound_statement)


State 59

    9 declaration_list: declaration_list declaration .

    $default  reduce using rule 9 (declaration_list)


State 60

   55 statement_list: statement_list . statement
   59 compound_statement: T_CURLY_LBRACKET declaration_list statement_list . T_CURLY_RBRACKET

    T_LBRACKET        shift, and go to state 21
    T_CURLY_LBRACKET  shift, and go to state 18
    T_CURLY_RBRACKET  shift, and go to state 86
    T_IF              shift, and go to state 23
    T_WHILE           shift, and go to state 24
    T_FOR             shift, and go to state 25
    T_RETURN          shift, and go to state 26
    T_IDENTIFIER      shift, and go to state 27
    T_CONSTANT        shift, and go to state 28
    T_LITERAL         shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 43
    statement              go to state 76
    compound_statement     go to state 46
    jump_statement         go to state 47
    expression_statement   go to state 48
    condition_statement    go to state 49
    iteration_statement    go to state 50


State 61

   24 postfix_expression: primary_expression T_LBRACKET . T_RBRACKET
   25                   | primary_expression T_LBRACKET . argument_list T_RBRACKET

    T_LBRACKET    shift, and go to state 21
    T_RBRACKET    shift, and go to state 87
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 88
    argument_list          go to state 89


State 62

   23 postfix_expression: primary_expression INC_OP .

    $default  reduce using rule 23 (postfix_expression)


State 63

   45 assignment_expression: postfix_expression T_ASSIGN . assignment_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 90


State 64

   27 multiply_expression: multiply_expression T_MULTIPLY . postfix_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression  go to state 32
    postfix_expression  go to state 91


State 65

   28 multiply_expression: multiply_expression T_DIVIDE . postfix_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression  go to state 32
    postfix_expression  go to state 92


State 66

   30 add_expression: add_expression T_PLUS . multiply_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression   go to state 32
    postfix_expression   go to state 93
    multiply_expression  go to state 94


State 67

   31 add_expression: add_expression T_MINUS . multiply_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression   go to state 32
    postfix_expression   go to state 93
    multiply_expression  go to state 95


State 68

   36 compare_expression: compare_expression T_GREATER . bw_shift_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression   go to state 32
    postfix_expression   go to state 93
    multiply_expression  go to state 34
    add_expression       go to state 35
    bw_shift_expression  go to state 96


State 69

   37 compare_expression: compare_expression T_GREATER_EQUAL . bw_shift_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression   go to state 32
    postfix_expression   go to state 93
    multiply_expression  go to state 34
    add_expression       go to state 35
    bw_shift_expression  go to state 97


State 70

   34 compare_expression: compare_expression T_LESS . bw_shift_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression   go to state 32
    postfix_expression   go to state 93
    multiply_expression  go to state 34
    add_expression       go to state 35
    bw_shift_expression  go to state 98


State 71

   35 compare_expression: compare_expression T_LESS_EQUAL . bw_shift_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression   go to state 32
    postfix_expression   go to state 93
    multiply_expression  go to state 34
    add_expression       go to state 35
    bw_shift_expression  go to state 99


State 72

   39 equal_expression: equal_expression T_EQUAL . compare_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression   go to state 32
    postfix_expression   go to state 93
    multiply_expression  go to state 34
    add_expression       go to state 35
    bw_shift_expression  go to state 36
    compare_expression   go to state 100


State 73

   40 equal_expression: equal_expression T_NOT_EQUAL . compare_expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression   go to state 32
    postfix_expression   go to state 93
    multiply_expression  go to state 34
    add_expression       go to state 35
    bw_shift_expression  go to state 36
    compare_expression   go to state 101


State 74

   62 expression_statement: expression T_SEMICOLON .

    $default  reduce using rule 62 (expression_statement)


State 75

   57 compound_statement: T_CURLY_LBRACKET statement_list T_CURLY_RBRACKET .

    $default  reduce using rule 57 (compound_statement)


State 76

   55 statement_list: statement_list statement .

    $default  reduce using rule 55 (statement_list)


State 77

    6 declaration: type_specifier T_SEMICOLON .

    $default  reduce using rule 6 (declaration)


State 78

   14 initialisation_declarator: declarator .
   15                          | declarator . T_EQUAL expression

    T_EQUAL  shift, and go to state 102

    $default  reduce using rule 14 (initialisation_declarator)


State 79

   16 initialisation_declarator_list: initialisation_declarator .

    $default  reduce using rule 16 (initialisation_declarator_list)


State 80

    7 declaration: type_specifier initialisation_declarator_list . T_SEMICOLON
   17 initialisation_declarator_list: initialisation_declarator_list . T_COMMA initialisation_declarator

    T_SEMICOLON  shift, and go to state 103
    T_COMMA      shift, and go to state 104


State 81

   21 primary_expression: T_LBRACKET expression T_RBRACKET .

    $default  reduce using rule 21 (primary_expression)


State 82

   63 condition_statement: T_IF T_LBRACKET expression . T_RBRACKET statement
   64                    | T_IF T_LBRACKET expression . T_RBRACKET statement T_ELSE statement

    T_RBRACKET  shift, and go to state 105


State 83

   65 iteration_statement: T_WHILE T_LBRACKET expression . T_RBRACKET statement

    T_RBRACKET  shift, and go to state 106


State 84

   66 iteration_statement: T_FOR T_LBRACKET expression . T_SEMICOLON expression T_SEMICOLON expression T_RBRACKET statement

    T_SEMICOLON  shift, and go to state 107


State 85

   61 jump_statement: T_RETURN expression T_SEMICOLON .

    $default  reduce using rule 61 (jump_statement)


State 86

   59 compound_statement: T_CURLY_LBRACKET declaration_list statement_list T_CURLY_RBRACKET .

    $default  reduce using rule 59 (compound_statement)


State 87

   24 postfix_expression: primary_expression T_LBRACKET T_RBRACKET .

    $default  reduce using rule 24 (postfix_expression)


State 88

   47 argument_list: expression .

    $default  reduce using rule 47 (argument_list)


State 89

   25 postfix_expression: primary_expression T_LBRACKET argument_list . T_RBRACKET
   48 argument_list: argument_list . T_COMMA expression

    T_RBRACKET  shift, and go to state 108
    T_COMMA     shift, and go to state 109


State 90

   45 assignment_expression: postfix_expression T_ASSIGN assignment_expression .

    $default  reduce using rule 45 (assignment_expression)


State 91

   27 multiply_expression: multiply_expression T_MULTIPLY postfix_expression .

    $default  reduce using rule 27 (multiply_expression)


State 92

   28 multiply_expression: multiply_expression T_DIVIDE postfix_expression .

    $default  reduce using rule 28 (multiply_expression)


State 93

   26 multiply_expression: postfix_expression .

    $default  reduce using rule 26 (multiply_expression)


State 94

   27 multiply_expression: multiply_expression . T_MULTIPLY postfix_expression
   28                    | multiply_expression . T_DIVIDE postfix_expression
   30 add_expression: add_expression T_PLUS multiply_expression .

    T_MULTIPLY  shift, and go to state 64
    T_DIVIDE    shift, and go to state 65

    $default  reduce using rule 30 (add_expression)


State 95

   27 multiply_expression: multiply_expression . T_MULTIPLY postfix_expression
   28                    | multiply_expression . T_DIVIDE postfix_expression
   31 add_expression: add_expression T_MINUS multiply_expression .

    T_MULTIPLY  shift, and go to state 64
    T_DIVIDE    shift, and go to state 65

    $default  reduce using rule 31 (add_expression)


State 96

   36 compare_expression: compare_expression T_GREATER bw_shift_expression .

    $default  reduce using rule 36 (compare_expression)


State 97

   37 compare_expression: compare_expression T_GREATER_EQUAL bw_shift_expression .

    $default  reduce using rule 37 (compare_expression)


State 98

   34 compare_expression: compare_expression T_LESS bw_shift_expression .

    $default  reduce using rule 34 (compare_expression)


State 99

   35 compare_expression: compare_expression T_LESS_EQUAL bw_shift_expression .

    $default  reduce using rule 35 (compare_expression)


State 100

   34 compare_expression: compare_expression . T_LESS bw_shift_expression
   35                   | compare_expression . T_LESS_EQUAL bw_shift_expression
   36                   | compare_expression . T_GREATER bw_shift_expression
   37                   | compare_expression . T_GREATER_EQUAL bw_shift_expression
   39 equal_expression: equal_expression T_EQUAL compare_expression .

    T_GREATER        shift, and go to state 68
    T_GREATER_EQUAL  shift, and go to state 69
    T_LESS           shift, and go to state 70
    T_LESS_EQUAL     shift, and go to state 71

    $default  reduce using rule 39 (equal_expression)


State 101

   34 compare_expression: compare_expression . T_LESS bw_shift_expression
   35                   | compare_expression . T_LESS_EQUAL bw_shift_expression
   36                   | compare_expression . T_GREATER bw_shift_expression
   37                   | compare_expression . T_GREATER_EQUAL bw_shift_expression
   40 equal_expression: equal_expression T_NOT_EQUAL compare_expression .

    T_GREATER        shift, and go to state 68
    T_GREATER_EQUAL  shift, and go to state 69
    T_LESS           shift, and go to state 70
    T_LESS_EQUAL     shift, and go to state 71

    $default  reduce using rule 40 (equal_expression)


State 102

   15 initialisation_declarator: declarator T_EQUAL . expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 110


State 103

    7 declaration: type_specifier initialisation_declarator_list T_SEMICOLON .

    $default  reduce using rule 7 (declaration)


State 104

   17 initialisation_declarator_list: initialisation_declarator_list T_COMMA . initialisation_declarator

    T_IDENTIFIER  shift, and go to state 16

    declarator                 go to state 78
    initialisation_declarator  go to state 111


State 105

   63 condition_statement: T_IF T_LBRACKET expression T_RBRACKET . statement
   64                    | T_IF T_LBRACKET expression T_RBRACKET . statement T_ELSE statement

    T_LBRACKET        shift, and go to state 21
    T_CURLY_LBRACKET  shift, and go to state 18
    T_IF              shift, and go to state 23
    T_WHILE           shift, and go to state 24
    T_FOR             shift, and go to state 25
    T_RETURN          shift, and go to state 26
    T_IDENTIFIER      shift, and go to state 27
    T_CONSTANT        shift, and go to state 28
    T_LITERAL         shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 43
    statement              go to state 112
    compound_statement     go to state 46
    jump_statement         go to state 47
    expression_statement   go to state 48
    condition_statement    go to state 49
    iteration_statement    go to state 50


State 106

   65 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET . statement

    T_LBRACKET        shift, and go to state 21
    T_CURLY_LBRACKET  shift, and go to state 18
    T_IF              shift, and go to state 23
    T_WHILE           shift, and go to state 24
    T_FOR             shift, and go to state 25
    T_RETURN          shift, and go to state 26
    T_IDENTIFIER      shift, and go to state 27
    T_CONSTANT        shift, and go to state 28
    T_LITERAL         shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 43
    statement              go to state 113
    compound_statement     go to state 46
    jump_statement         go to state 47
    expression_statement   go to state 48
    condition_statement    go to state 49
    iteration_statement    go to state 50


State 107

   66 iteration_statement: T_FOR T_LBRACKET expression T_SEMICOLON . expression T_SEMICOLON expression T_RBRACKET statement

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 114


State 108

   25 postfix_expression: primary_expression T_LBRACKET argument_list T_RBRACKET .

    $default  reduce using rule 25 (postfix_expression)


State 109

   48 argument_list: argument_list T_COMMA . expression

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 115


State 110

   15 initialisation_declarator: declarator T_EQUAL expression .

    $default  reduce using rule 15 (initialisation_declarator)


State 111

   17 initialisation_declarator_list: initialisation_declarator_list T_COMMA initialisation_declarator .

    $default  reduce using rule 17 (initialisation_declarator_list)


State 112

   63 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement .
   64                    | T_IF T_LBRACKET expression T_RBRACKET statement . T_ELSE statement

    T_ELSE  shift, and go to state 116

    T_ELSE    [reduce using rule 63 (condition_statement)]
    $default  reduce using rule 63 (condition_statement)


State 113

   65 iteration_statement: T_WHILE T_LBRACKET expression T_RBRACKET statement .

    $default  reduce using rule 65 (iteration_statement)


State 114

   66 iteration_statement: T_FOR T_LBRACKET expression T_SEMICOLON expression . T_SEMICOLON expression T_RBRACKET statement

    T_SEMICOLON  shift, and go to state 117


State 115

   48 argument_list: argument_list T_COMMA expression .

    $default  reduce using rule 48 (argument_list)


State 116

   64 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE . statement

    T_LBRACKET        shift, and go to state 21
    T_CURLY_LBRACKET  shift, and go to state 18
    T_IF              shift, and go to state 23
    T_WHILE           shift, and go to state 24
    T_FOR             shift, and go to state 25
    T_RETURN          shift, and go to state 26
    T_IDENTIFIER      shift, and go to state 27
    T_CONSTANT        shift, and go to state 28
    T_LITERAL         shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 43
    statement              go to state 118
    compound_statement     go to state 46
    jump_statement         go to state 47
    expression_statement   go to state 48
    condition_statement    go to state 49
    iteration_statement    go to state 50


State 117

   66 iteration_statement: T_FOR T_LBRACKET expression T_SEMICOLON expression T_SEMICOLON . expression T_RBRACKET statement

    T_LBRACKET    shift, and go to state 21
    T_IDENTIFIER  shift, and go to state 27
    T_CONSTANT    shift, and go to state 28
    T_LITERAL     shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 119


State 118

   64 condition_statement: T_IF T_LBRACKET expression T_RBRACKET statement T_ELSE statement .

    $default  reduce using rule 64 (condition_statement)


State 119

   66 iteration_statement: T_FOR T_LBRACKET expression T_SEMICOLON expression T_SEMICOLON expression . T_RBRACKET statement

    T_RBRACKET  shift, and go to state 120


State 120

   66 iteration_statement: T_FOR T_LBRACKET expression T_SEMICOLON expression T_SEMICOLON expression T_RBRACKET . statement

    T_LBRACKET        shift, and go to state 21
    T_CURLY_LBRACKET  shift, and go to state 18
    T_IF              shift, and go to state 23
    T_WHILE           shift, and go to state 24
    T_FOR             shift, and go to state 25
    T_RETURN          shift, and go to state 26
    T_IDENTIFIER      shift, and go to state 27
    T_CONSTANT        shift, and go to state 28
    T_LITERAL         shift, and go to state 29

    primary_expression     go to state 32
    postfix_expression     go to state 33
    multiply_expression    go to state 34
    add_expression         go to state 35
    bw_shift_expression    go to state 36
    compare_expression     go to state 37
    equal_expression       go to state 38
    bitwise_expression     go to state 39
    logical_expression     go to state 40
    ternary_expression     go to state 41
    assignment_expression  go to state 42
    expression             go to state 43
    statement              go to state 121
    compound_statement     go to state 46
    jump_statement         go to state 47
    expression_statement   go to state 48
    condition_statement    go to state 49
    iteration_statement    go to state 50


State 121

   66 iteration_statement: T_FOR T_LBRACKET expression T_SEMICOLON expression T_SEMICOLON expression T_RBRACKET statement .

    $default  reduce using rule 66 (iteration_statement)
